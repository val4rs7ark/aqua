<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.WasMapper">
	<select id="wasMainChart" parameterType="map" resultType="map">
		select sum(touch) as touch, mcmonth  from(select   sum(order_unitprice*order_count) as touch  
		   ,CASE WHEN '${mcYear}-${mcMonth}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear}-${mcMonth}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth}'
            WHEN '${mcYear1}-${mcMonth1}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear1}-${mcMonth1}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth1}'
            WHEN '${mcYear2}-${mcMonth2}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear2}-${mcMonth2}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth2}'
            WHEN '${mcYear3}-${mcMonth3}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear3}-${mcMonth3}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth3}'
            WHEN '${mcYear4}-${mcMonth4}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear4}-${mcMonth4}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth4}'
            WHEN '${mcYear5}-${mcMonth5}-01' <![CDATA[ <= ]]> order_enddate and '${mcYear5}-${mcMonth5}-31' <![CDATA[ >= ]]> order_enddate THEN '${mcMonth5}'
            end as mcmonth
            from order_deli
            where order_gubun = '생산'
      group by order_enddate )
      group by mcmonth
      order by mcmonth   
	</select>
	<select id="wasEmpAttendance" parameterType="map" statementType="CALLABLE">
		{ CALL proc_empAttendance(#{empno, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
							     ,#{msg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}) }
	</select>
	<update id="wasEmpStatusNoteDelete" parameterType="map">
		delete from notepad
        where note_no = #{note_no} 
	</update>
	<update id="wasEmpStatusNoteInsert" parameterType="map">
		insert into notepad(note_no,empno,note_content,note_write_date)
        values((select nvl((select max(note_no)+1 from notepad),1)from dual),#{empno},#{note_content},#{note_write_date, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}) 
	</update>
	<select id="wasEmpStatusNoteDetail" parameterType="map" resultType="map">
		select note_write_date,note_content,note_no from notepad
            where empno = #{empno, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
            and note_write_date like #{empStatus_year, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}||'_'
            						||#{empStatus_month, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}||'_'
            						||#{empStatus_day, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
	</select>
	<select id="wasEmpStatusNoteList" parameterType="map" resultType="map">
		select note_no,note_write_date from notepad
            where empno = #{empno}
            and note_write_date like #{empStatus_year, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}||'_'||#{empStatus_month, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}||'%'
	</select>
	<select id="wasEmpStatus" parameterType="map" resultType="map">
		select status_startdate, status_enddate, status_name from empstatus
            where empno = #{empno}
            and status_startdate like #{empStatus_year}||'_'||#{empStatus_month}||'%'
	</select>
    <select id="wasLogin" parameterType="map" statementType="CALLABLE">
    	{ CALL proc_login(
                #{empno, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
                ,#{emp_pw, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
                ,#{login_gubun, mode=IN, jdbcType=VARCHAR, javaType=java.lang.String}
                ,#{msg, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}
                ,#{outtime, mode=OUT, jdbcType=VARCHAR, javaType=java.lang.String}                 
            )}
    </select>
    <update id="firstLogin" parameterType="map">
    	update emp set session_no = #{session_no}
    				where empno = #{empno}
    </update>
    <update id="sessionOut" parameterType="string">
    	update emp set session_no = NULL
    				where session_no = #{value}
    </update>
    <select id="checkLogin" parameterType="map" resultType="string">
    	select nvl((select session_no from emp
    		where empno = #{empno}),' ') from dual
    </select>
    <select id="dumyIndex" parameterType="string" resultType="string">
    	select nvl((select resident_no from emp
			where empno = #{value}),'-1') from dual
    </select>
</mapper> 